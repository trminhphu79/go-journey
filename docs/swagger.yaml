definitions:
  dto.UpdateTask:
    properties:
      description:
        example: Updated description
        type: string
      status:
        example: slug-slug
        type: string
      tags:
        example:
        - '[''Bug'''
        - ' ''Urgent'']'
        items:
          type: string
        type: array
      title:
        example: Update title
        type: string
    type: object
  model.Task:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      slug:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
  model.TaskStatus:
    enum:
    - TODO
    - IN_PROGRESS
    - REJECTED
    - RESOLVED
    type: string
    x-enum-varnames:
    - Todo
    - InProgress
    - Rejected
    - Resolved
  network.ResCode:
    enum:
    - "7979"
    - "7980"
    - "7981"
    - "7982"
    type: string
    x-enum-varnames:
    - success_code
    - failue_code
    - retry_code
    - invalid_access_token_code
  network.apiError:
    properties:
      code:
        type: integer
      err: {}
      message:
        type: string
    type: object
  network.response:
    properties:
      code:
        $ref: '#/definitions/network.ResCode'
      data: {}
      message:
        type: string
      status:
        type: integer
    required:
    - code
    - data
    - message
    - status
    type: object
info:
  contact: {}
paths:
  /api/v1/task:
    post:
      consumes:
      - application/json
      description: Create a new task with the input data
      parameters:
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.TaskStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/network.apiError'
      summary: Create a new task
      tags:
      - Tasks
  /api/v1/task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by its ID
      parameters:
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response with number of affected rows
          schema:
            allOf:
            - $ref: '#/definitions/network.response'
            - properties:
                data:
                  type: integer
              type: object
      summary: Delete a task
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: Get a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/network.apiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/network.apiError'
      summary: Get a task by ID
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      description: Update task fields partially by ID
      parameters:
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated task fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Update a task
      tags:
      - Tasks
swagger: "2.0"
