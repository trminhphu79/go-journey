version: "3.8"

name: task-app
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-todo-app
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    depends_on:
      - db
    environment:
      # Server settings
      - GO_MODE=${GO_MODE:-release}
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - SERVER_PORT=${SERVER_PORT:-8080}
      
      # Database settings
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - DB_NAME=${DB_NAME:-tododb}
      - DB_MIN_POOL_SIZE=${DB_MIN_POOL_SIZE:-10}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE:-100}
      - DB_QUERY_TIMEOUT=${DB_QUERY_TIMEOUT:-30}
      
      # Security keys
      - RSA_PUBLIC_KEY_PATH=${RSA_PUBLIC_KEY_PATH:-./keys/public.pem}
      - RSA_PRIVATE_KEY_PATH=${RSA_PRIVATE_KEY_PATH:-./keys/private.pem}
      
      # Token settings
      - ACCESS_TOKEN_VALIDITY_SEC=${ACCESS_TOKEN_VALIDITY_SEC:-3600}
      - REFRESH_TOKEN_VALIDITY_SEC=${REFRESH_TOKEN_VALIDITY_SEC:-604800}
      
      # Legacy variables
      - APP_PORT=${SERVER_PORT:-8080}
      - GIN_MODE=${GO_MODE:-release}
    networks:
      - app-network
    volumes:
      - ./keys:/app/keys

  db:
    image: postgres:15
    container_name: go-postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-tododb}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
