version: "3.8"

name: task-app
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-todo-app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g
    environment:
      # Server settings
      GO_MODE: ${GO_MODE}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      
      # Database settings
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_MIN_POOL_SIZE: ${DB_MIN_POOL_SIZE}
      DB_MAX_POOL_SIZE: ${DB_MAX_POOL_SIZE}
      DB_QUERY_TIMEOUT: ${DB_QUERY_TIMEOUT}
      
      # Security keys
      RSA_PUBLIC_KEY: ${RSA_PUBLIC_KEY}
      RSA_PRIVATE_KEY: ${RSA_PRIVATE_KEY}
      
      # Token settings
      ACCESS_TOKEN_VALIDITY_SEC: ${ACCESS_TOKEN_VALIDITY_SEC}
      REFRESH_TOKEN_VALIDITY_SEC: ${REFRESH_TOKEN_VALIDITY_SEC}
      
      # Legacy variables
      APP_PORT: ${APP_PORT}
      GIN_MODE: ${GIN_MODE}
    networks:
      - app-network
    volumes:
      - ./keys:/app/keys

  db:
    image: postgres:15
    container_name: go-postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
